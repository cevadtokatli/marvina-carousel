import {TouchMove} from './touch-move';
import {List} from './list';
import {Arrows} from './arrows';
import {Options} from './options';
import * as Group from './grouping';

export declare class MarvinaCarousel {
    el: HTMLElement;
	carouselEl: HTMLDivElement;
	container: HTMLDivElement;
	elements: HTMLElement[];
	cloneElements: HTMLElement[];
	elWidth: number;
	width: number;
	timing: string;
	duration: number;
	group: boolean;
	minImage: number;
	maxImage: number;
	minWidth: number;
	maxWidth: number;
	height: number;
	space: number;
	touchMove: TouchMove;
	list: List;
	arrows: Arrows;
	autoPlay: boolean;
	autoPlaySpeed: number;
	autoPlayStatus: boolean;
	autoPlayContainer: HTMLDivElement;
	autoPlayInterval: number;
	index: number;
	total: number;
	totalIndex: number;
	processing: boolean;
	processingTimeout: number;
    Group: Group.Grouping;
    resize: Group.Resize;
    setCarouselAnimation: Group.SetCarouselAnimation;
    addElement: Group.AddElement;
    removeElement: Group.RemoveElement;
    
    constructor(o?:Options);
	extractAttributes(o:Options): void;
	addElementIterator(el:HTMLElement, index:number): void;
	add(el:string|HTMLElement, index:number): void;
	addFirst(el:string|HTMLElement): void;
	addLast(el:string|HTMLElement): void;
	removeElementIterator(index:number): void;
	remove(index:number): void;
	removeFirst(): void;
	removeLast(): void;
	prev(): Promise<boolean>;
	prevIndex(touchMove:boolean): Promise<boolean>;
	next(): Promise<boolean>;
	nextIndex(touchMove:boolean, auto:boolean): Promise<boolean>;
	play(): void;
	stop(): void;
	toggle(): void;
	destroy(): void;
	setCarouselAnimationIterator(index:number, next:boolean, auto:boolean): void;
	applyTransition(): void;
	resizeIterator(): void;
	getIndex(): number;
	setIndex(index:number): Promise<boolean>;
	getTotal(): number;
	getTotalIndex(): number;
	getTiming(): string;
	setTiming(timing:string): void;
	getDuration(): number;
	setDuration(duration:number): void;
	getAutoPlaySpeed(): number;
	setAutoPlaySpeed(speed:number): void;
	setAutoPlayInterval(duration:boolean): void;
}